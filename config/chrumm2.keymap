/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {

    behaviors {

            td0: tap_dance_0 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
               tapping-term-ms = <200>;
               bindings = <&kp LSHIFT>, <&kp CAPS>;
            };
       };      



   
        keymap {
            compatible = "zmk,keymap";

            default_layer {
                // --------------------------------------------------------------------------------------------------
               // |  ESC  |  1   |  2   |  3   |  4   |  5   |   6   |  7    |  8   |  9   |   0   | MINUS |  DEL |
               // |  TAB  |  Q   |  W   |  F   |  P   |  B   |   J   |  L    |  U   |  Y   |   ;   | LBKT  |  RBKT |
               // |  MO 2 |  A   |  R   |  S   |  T   |  G   |   M   |  N    |  E   |  I   |   O   |  '    |  NUBS |
               // |  TD 0 |  Z   |  X   |  C   |  D   |  V   |   K   |  H    |  ,   |  .   |   /   |  UP   |  RSFT |
               // |  LCTR | LALT | MO 1 | SPACE| ENTER|      | ENTER | SPACE | BSPC | MO 3 | LEFT  | DOWN  |  RIGHT|


                bindings = <
                 &kp ESC    &kp N1     &kp N2    &kp N3     &kp N4     &kp N5           &kp N6      &kp N7     &kp N8      &kp N9      &kp N0      &kp MINUS   &kp DEL
                 &kp TAB    &kp Q      &kp W     &kp F      &kp P      &kp B            &kp J       &kp L      &kp U       &kp Y       &kp SEMI    &kp LBKT    &kp RBKT
                 &mo 3      &kp A      &kp R     &kp S      &kp T      &kp G            &kp M       &kp N      &kp E       &kp I       &kp O       &kp APOS    &kp NUBS
                 &td0       &kp Z      &kp X     &kp C      &kp D      &kp V            &kp K       &kp H      &kp COMMA   &kp DOT     &kp FSLH    &kp UP      &kp RSFT
                 &kp LCTRL  &kp LALT   &mo 1     &kp SPACE  &kp ENTER                   &kp ENTER   &kp SPACE  &kp BSPC    &mo 3       &kp LEFT    &kp DOWN    &kp RIGHT
               >;
           };

         lower_layer {
              // -------------------------------------------------------------------------------------------
                // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |   F7  |  F8   |  F9  | F10  |  F11  |  F12  |F12  |
                // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |  *   |  (   |   )   |  DEL  |F12  |
                // |       |  F1  |  F2  |  F3  |  F4  |  F5  |   F6  |   _   |  +   |  {   |   }   |   |   |F12  |
                // |       |  F7  |  F8  |  F9  |  F10 |  F11 |   F12 | LS(#) |LS(|) |      |       |       |F12  |
                // |       |      |      |      |      |      |       |       | NEXT | Vol- | Vol+  | PLAY  |F12  |
            bindings = <
                &trans    &trans      &trans      &trans     &trans       &trans                &trans     &trans      &trans    &trans     &kp FSLH   &kp EQUAL   &kp PLUS
                &trans    &trans      &trans      &trans     &trans       &trans                &trans     &trans      &trans    &trans     &kp N7     &kp N8      &kp N9
                &trans    &trans      &trans      &trans     &trans       &trans                &trans     &trans      &trans    &trans     &kp N4     &kp N5      &kp N6
                &trans    &trans      &trans      &trans     &trans       &trans                &trans     &trans      &trans    &trans     &kp N1     &kp N2      &kp N3
                &trans    &trans      &trans      &trans     &trans                             &trans     &trans      &trans    &trans     &kp N0     &kp PERIOD  &kp EQUAL 
                >;
            };

            raise_layer {
                    // ------------------------------------------------------------------------------------------
                // |  ESC  |  F2  |  F3  |  F4  |  F5  |  F6  |  F7   |  F8   |  F9  | F10  |  F11  |  F12  |F12  |
                // |   ~   |  1   |  2   |  3   |  4   |  5   |  6    |   7   |  8   |  9   |   0   |  DEL  |F12  |
                // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   -   |  =   |  [   |   ]   |   \   |F12  |
                // |       |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  |   #   |  |   |      |       |       |F12  |
                // |       |      |      |      |      |      |       |       |       |      |      |       |F12  |
                bindings = <
                    &trans    &kp F1      &kp F2      &kp F3     &kp F4       &kp F5                &kp F6     &kp F7      &kp F8    &kp F9     &kp F10    &kp F11     &kp F12
                    &trans    &trans      &trans      &trans     &trans       &trans                &trans     &trans      &trans    &trans     &trans     &trans      &trans
                    &trans    &trans      &trans      &trans     &trans       &trans                &trans     &trans      &trans    &trans     &trans     &trans      &trans
                    &trans    &trans      &trans      &trans     &trans       &trans                &trans     &trans      &trans    &trans     &trans     &trans      &trans
                    &trans    &trans      &trans      &trans     &trans                             &trans     &trans      &trans    &trans     &trans     &trans      &trans
                >;
            };

            adjust_layer {
                // ------------------------------------------------------------------------------------------
                // |tog(4)|  F2  |  F3  |  F4  |  F5  |  F6  |  F7  |  F8  |  F9  |  F10 |  F11 |    F12    |
                // |      |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |LALT(PRTSN)|
                // |      |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |   PRTSN   |
                // |      |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |  NA  |LCTRL(DEL) |
                // |      |      |      |      |      |BOOTLD|BOOTLD|      |      |      |      |           |
                bindings = <
                    &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4            &out OUT_TOG    &trans        &trans         &trans     &trans     &trans     &bt BT_CLR_ALL    
                    &bootloader   &trans         &trans         &trans          &trans          &trans                  &trans          &trans        &trans         &trans     &trans     &trans     &trans
                    &sys_reset    &trans         &trans         &trans          &trans          &trans                  &trans          &trans        &trans         &trans     &trans     &trans     &trans
                    &trans        &trans         &trans         &trans          &trans          &trans                  &trans          &trans        &trans         &trans     &trans     &trans     &trans
                    &trans        &trans         &trans         &trans          &trans                                  &trans          &trans        &trans         &trans     &bt BT_PRV &trans     &bt BT_NXT
                >;
            };

           // flock_layer {
                // ----------------------------------------------------------------------------------------------
                // |tog(4) |  F2    |   F3   |   F4   |   F5   |   F6   |  F7  |  F8  |  F9  | F10 | F11 |      |
                // |out tog|BT_SEL 0|BT_SEL 1|BT_SEL 2|BT_SEL 3|BT_SEL 4|BT_PRV|BT_NXT|BT_CLR|     |     |      |
                // |       |        |        |        |        |        |      |      |      |     |     |      |
                // |       |        |        |        |        |        |      |      |      |     |     |      |
                // |       |        |        |        |        |        |      |      |      |     |     |      |
               // bindings = <
              //      &tog 4       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6       &kp F7     &kp F8     &kp F9     &kp F10 &kp F11 &trans
               //     &out OUT_TOG &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_PRV &bt BT_NXT &bt BT_CLR &trans  &trans  &trans
               //     &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
                //    &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
              //      &trans       &trans       &trans       &trans       &trans       &trans       &trans     &trans     &trans     &trans  &trans  &trans
              //  >;
           // };
        };
    };